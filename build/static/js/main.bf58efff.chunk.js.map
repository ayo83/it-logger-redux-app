{"version":3,"sources":["actions/types.js","actions/logActions.js","components/layout/SearchBar.js","components/layout/AddBtn.js","components/layout/Preloader.js","components/logs/LogItem.js","components/logs/Logs.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["GET_LOGS","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","SET_LOADING","LOGS_ERROR","SEARCH_LOGS","GET_TECHS","ADD_TECH","DELETE_TECH","TECHS_ERROR","setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","style","marginBottom","className","id","placeholder","ref","onChange","e","current","value","htmlFor","AddBtn","href","Preloader","deleteLog","method","setCurrent","log","attention","onClick","message","tech","format","date","M","toast","html","state","getLogs","logs","loading","useEffect","length","map","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","disabled","checked","newLog","Date","updateLog","updLog","addTech","setFirstName","setLastName","deleteTech","initialState","error","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAaA,EAAW,WACXC,EAAU,UACVC,EAAa,aACbC,EAAc,cACdC,EAAgB,gBAChBC,EAAa,aAEbC,EAAc,cACdC,EAAa,aACbC,EAAc,cACdC,EAAY,YACZC,EAAW,WACXC,EAAc,cACdC,EAAc,cCgJdC,EAAa,WACtB,MAAO,CACHC,KAAMR,ICxHCS,cACX,KACA,CAAEC,WDiFoB,SAAAC,GAAI,8CAAI,WAAMC,GAAN,iBAAAC,EAAA,sEAE1BN,IAF0B,SAIRO,MAAM,0EAAD,OAA2EH,IAJxE,cAIpBI,EAJoB,gBAKPA,EAAIC,OALG,OAKpBC,EALoB,OAO1BL,EAAS,CACLJ,KAAMN,EACNgB,QAASD,IATa,kDAY1BL,EAAS,CACLJ,KAAMP,EACNiB,QAAS,KAAIC,SAASC,aAdA,0DAAJ,wDCnFfX,EAlCG,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACXC,EAAOU,iBAAO,IAMpB,OACI,qBAAKC,MAAO,CAAEC,aAAc,QAAUC,UAAU,QAAhD,SACI,qBAAKA,UAAU,cAAf,SACI,+BACI,sBAAKA,UAAU,cAAf,UACI,uBACIC,GAAG,SACHjB,KAAK,SACLkB,YAAY,gBACZC,IAAKhB,EACLiB,SAdP,SAAAC,GACbnB,EAAWC,EAAKmB,QAAQC,UAeR,uBAAOP,UAAU,aAAaQ,QAAQ,SAAtC,SACI,mBAAGR,UAAU,iBAAb,sBAEJ,mBAAGA,UAAU,iBAAb,+BCHTS,EAtBA,WACX,OACI,sBAAKT,UAAU,mBAAf,UACI,mBAAGU,KAAK,iBAAiBV,UAAU,sDAAnC,SACI,mBAAGA,UAAU,uBAAb,mBAEJ,+BACI,6BACI,mBAAGU,KAAK,mBAAmBV,UAAU,mCAArC,SACI,mBAAGA,UAAU,iBAAb,wBAGR,6BACI,mBAAGU,KAAK,kBAAkBV,UAAU,iCAApC,SACI,mBAAGA,UAAU,iBAAb,mCCNTW,EARG,WACd,OACI,qBAAKX,UAAU,0BAAf,SACI,qBAAKA,UAAU,0B,iCCiCZf,cACX,KACA,CAAE2B,UJkCmB,SAAAX,GAAE,8CAAI,WAAMb,GAAN,SAAAC,EAAA,sEAEvBN,IAFuB,SAIjBO,MAAM,wEAAD,OAAyEW,GAAM,CACtFY,OAAQ,WALW,OAQvBzB,EAAS,CACLJ,KAAMZ,EACNsB,QAASO,IAVU,gDAavBb,EAAS,CACLJ,KAAMP,EACNiB,QAAS,KAAIC,SAASC,aAfH,yDAAJ,uDIlCVkB,WJsGS,SAAAC,GACtB,MAAO,CACH/B,KAAMX,EACNqB,QAASqB,KI3GF9B,EA9BC,SAAC,GAAoC,IAAlC8B,EAAiC,EAAjCA,IAAKH,EAA4B,EAA5BA,UAAWE,EAAiB,EAAjBA,WAM/B,OACI,oBAAId,UAAU,kBAAd,SACI,gCACI,mBAAGU,KAAK,kBAAkBV,UAAS,wBAAmBe,EAAIC,UAAY,WAAa,aACnFC,QAAS,kBAAMH,EAAWC,IAD1B,SACiCA,EAAIG,UAAY,uBACjD,uBAAMlB,UAAU,YAAhB,UACI,uBAAMA,UAAU,aAAhB,iBAAkCe,EAAId,MAAW,IADrD,kBAEoB,IAFpB,IAEyB,sBAAMD,UAAU,aAAhB,SAA8Be,EAAII,OAF3D,MAE2E,IAAI,cAAC,IAAD,CAAQC,OAAO,0BAAf,SAA2CL,EAAIM,UAE9H,mBAAGX,KAAK,KAAKO,QAdR,WACbL,EAAUG,EAAId,IACdqB,IAAEC,MAAM,CAAEC,KAAM,iBAYwBxB,UAAU,oBAA1C,SACI,mBAAGA,UAAU,2BAAb,8BCiBLf,eAJS,SAAAwC,GAAK,MAAK,CAC9BV,IAAKU,EAAMV,OAGyB,CAAEW,QLbnB,yDAAM,WAAMtC,GAAN,iBAAAC,EAAA,sEAErBN,IAFqB,SAIHO,MAAM,wEAJH,cAIfC,EAJe,gBAKFA,EAAIC,OALF,OAKfC,EALe,OAOrBL,EAAS,CACLJ,KAAMd,EACNwB,QAASD,IATQ,kDAYrBL,EAAS,CACLJ,KAAMP,EACNiB,QAAS,KAAIC,SAASC,aAdL,0DAAN,wDKaRX,EAlCF,SAAC,GAAqC,IAAD,IAAnC8B,IAAKY,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAAUF,EAAc,EAAdA,QAUhC,OAPAG,qBAAU,WACNH,MAED,IAIAE,GAAoB,OAATD,EAAsB,cAAC,EAAD,IAEhC,qBAAI3B,UAAU,yBAAd,UACI,oBAAIA,UAAU,oBAAd,SACI,oBAAIA,UAAU,SAAd,2BAEF4B,GAA2B,IAAhBD,EAAKG,OAGdH,EAAKI,KAAI,SAAAhB,GAAG,OAAI,cAAC,EAAD,CAASA,IAAKA,GAAUA,EAAId,OAF5C,mBAAGD,UAAU,SAAb,0C,OCfHgC,EAAW,yDAAM,WAAM5C,GAAN,iBAAAC,EAAA,sEAEtBN,IAFsB,SAIJO,MAAM,yEAJF,cAIhBC,EAJgB,gBAKHA,EAAIC,OALD,OAKhBC,EALgB,OAOtBL,EAAS,CACLJ,KAAML,EACNe,QAASD,IATS,kDAYtBL,EAAS,CACLJ,KAAMF,EACNY,QAAS,KAAIC,SAASC,aAdJ,0DAAN,uDAkEXb,EAAa,WACtB,MAAO,CACHC,KAAMR,IC9CCS,eAJS,SAAAwC,GAAK,MAAK,CAC9BN,KAAMM,EAAMN,QAKZ,CAAEa,YAFS/C,EA1BW,SAAC,GAA4C,IAA1C+C,EAAyC,EAAzCA,SAAyC,IAA/Bb,KAAQc,EAAuB,EAAvBA,MAAOL,EAAgB,EAAhBA,QAMlD,OALAC,qBAAU,WACNG,MAED,KAGEJ,GACS,OAAVK,GACAA,EAAMF,KAAI,SAAAG,GAAC,OACP,yBAAmB3B,MAAK,UAAK2B,EAAEC,UAAP,YAAoBD,EAAEE,UAA9C,UACKF,EAAEC,UADP,IACmBD,EAAEE,WADRF,EAAEjC,UC0DrBoC,EAAa,CACfC,MAAO,MACPC,OAAQ,OAGGtD,cAAQ,KAAM,CAACuD,OR9BR,SAAAzB,GAAG,8CAAI,WAAM3B,GAAN,iBAAAC,EAAA,sEAErBN,IAFqB,SAIHO,MAAM,uEAAwE,CAC5FuB,OAAQ,OACR4B,KAAMC,KAAKC,UAAU5B,GACrB6B,QAAS,CACL,eAAgB,sBARH,cAIfrD,EAJe,gBAWFA,EAAIC,OAXF,OAWfC,EAXe,OAarBL,EAAS,CACLJ,KAAMb,EACNuB,QAASD,IAfQ,kDAkBrBL,EAAS,CACLJ,KAAMP,EACNiB,QAAS,KAAIC,SAASC,aApBL,0DAAJ,wDQ8BVX,EAvEK,SAAC,GAAc,IAAbuD,EAAY,EAAZA,OAAY,EACAK,mBAAS,IADT,mBACvB3B,EADuB,KACd4B,EADc,OAEID,oBAAS,GAFb,mBAEvB7B,EAFuB,KAEZ+B,EAFY,OAGNF,mBAAS,IAHH,mBAGvB1B,EAHuB,KAGjB6B,EAHiB,KA0B9B,OACI,sBAAK/C,GAAG,gBAAgBD,UAAU,QAAQF,MAAOuC,EAAjD,UACI,sBAAKrC,UAAU,gBAAf,UACI,kDACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,cAAf,UACI,uBAAOhB,KAAK,OAAOiE,KAAK,UAAU1C,MAAOW,EAASd,SAAU,SAAAC,GAAC,OAAIyC,EAAWzC,EAAE6C,OAAO3C,UACrF,uBAAOC,QAAQ,UAAUR,UAAU,SAAnC,8BAGR,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,cAAf,SACI,yBAAQiD,KAAK,OAAO1C,MAAOY,EAAMnB,UAAU,kBAAkBI,SAAU,SAAAC,GAAC,OAAI2C,EAAQ3C,EAAE6C,OAAO3C,QAA7F,UACI,wBAAQA,MAAM,GAAG4C,UAAQ,EAAzB,+BACA,cAAC,EAAD,WAIZ,qBAAKnD,UAAU,MAAf,SACA,qBAAKA,UAAU,cAAf,SACI,4BACI,kCACI,uBAAOhB,KAAK,WAAWgB,UAAU,YAAYoD,QAASpC,EAAWT,MAAOS,EAAWZ,SAAU,SAAAC,GAAC,OAAI0C,GAAc/B,MAChH,+DAMhB,qBAAKhB,UAAU,eAAf,SACI,mBAAGU,KAAK,KAAKO,QAnDR,WACb,GAAe,KAAZC,GAA2B,KAATC,EACjBG,IAAEC,MAAM,CAAEC,KAAM,wCACd,CACF,IAAM6B,EAAS,CACXnC,UACAF,YACAG,OACAE,KAAM,IAAIiC,MAGdd,EAAOa,GACP/B,IAAEC,MAAM,CAAEC,KAAK,gBAAD,OAAkBL,KAEhC2B,EAAW,IACXC,GAAa,GACbC,EAAQ,MAmC4BhD,UAAU,iDAA1C,2BCcVqC,EAAa,CACfC,MAAO,MACPC,OAAQ,OAYGtD,eAJS,SAAAwC,GAAK,MAAK,CAC9BnB,QAASmB,EAAMV,IAAIT,WAKnB,CAAEiD,UTEmB,SAAAxC,GAAG,8CAAI,WAAM3B,GAAN,iBAAAC,EAAA,sEAExBN,IAFwB,SAINO,MAAM,wEAAD,OAAyEyB,EAAId,IAAM,CACtGY,OAAQ,MACR4B,KAAMC,KAAKC,UAAU5B,GACrB6B,QAAS,CACL,eAAgB,sBARA,cAIlBrD,EAJkB,gBAYLA,EAAIC,OAZC,OAYlBC,EAZkB,OAcxBL,EAAS,CACLJ,KAAMT,EACNmB,QAASD,IAhBW,kDAmBxBL,EAAS,CACLJ,KAAMP,EACNiB,QAAS,KAAIC,SAASC,aArBF,0DAAJ,wDSJbX,EArFM,SAAC,GAA4B,IAA1BqB,EAAyB,EAAzBA,QAASiD,EAAgB,EAAhBA,UAAgB,EACfV,mBAAS,IADM,mBACtC3B,EADsC,KAC7B4B,EAD6B,OAEXD,oBAAS,GAFE,mBAEtC7B,EAFsC,KAE3B+B,EAF2B,OAGrBF,mBAAS,IAHY,mBAGtC1B,EAHsC,KAGhC6B,EAHgC,KAK7CnB,qBAAU,WACFvB,IACAwC,EAAWxC,EAAQY,SACnB6B,EAAazC,EAAQU,WACrBgC,EAAQ1C,EAAQa,SAErB,CAACb,IAuBJ,OACI,sBAAKL,GAAG,iBAAiBD,UAAU,QAAQF,MAAOuC,EAAlD,UACI,sBAAKrC,UAAU,gBAAf,UACI,kDACA,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,cAAf,SACI,uBAAOhB,KAAK,OAAOiE,KAAK,UAAU1C,MAAOW,EAASd,SAAU,SAAAC,GAAC,OAAIyC,EAAWzC,EAAE6C,OAAO3C,cAG7F,qBAAKP,UAAU,MAAf,SACI,qBAAKA,UAAU,cAAf,SACI,yBAAQiD,KAAK,OAAO1C,MAAOY,EAAMnB,UAAU,kBAAkBI,SAAU,SAAAC,GAAC,OAAI2C,EAAQ3C,EAAE6C,OAAO3C,QAA7F,UACI,wBAAQA,MAAM,GAAG4C,UAAQ,EAAzB,+BACA,wBAAQ5C,MAAM,YAAd,wBACA,wBAAQA,MAAM,WAAd,uBACA,wBAAQA,MAAM,iBAAd,mCAIZ,qBAAKP,UAAU,MAAf,SACI,qBAAKA,UAAU,cAAf,SACI,4BACI,kCACI,uBAAOhB,KAAK,WAAWgB,UAAU,YAAYoD,QAASpC,EAAWT,MAAOS,EAAWZ,SAAU,SAAAC,GAAC,OAAI0C,GAAc/B,MAChH,+DAMpB,qBAAKhB,UAAU,eAAf,SACI,mBAAGU,KAAK,KAAKO,QApDR,WACb,GAAgB,KAAZC,GAA2B,KAATC,EAClBG,IAAEC,MAAM,CAAEC,KAAM,wCACb,CACH,IAAMgC,EAAS,CACXvD,GAAIK,EAAQL,GACZiB,UACAF,YACAG,OACAE,KAAM,IAAIiC,MAGdC,EAAUC,GACVlC,IAAEC,MAAM,CAAEC,KAAK,kBAAD,OAAoBL,KAElC2B,EAAW,IACXC,GAAa,GACbC,EAAQ,MAmC4BhD,UAAU,iDAA1C,2BCKDf,cACX,KACA,CAAEwE,QJjDiB,SAAAtC,GAAI,8CAAI,WAAM/B,GAAN,iBAAAC,EAAA,sEAEvBN,IAFuB,SAILO,MAAM,wEAAyE,CAC7FuB,OAAQ,OACR4B,KAAMC,KAAKC,UAAUxB,GACrByB,QAAS,CACL,eAAgB,sBARD,cAIjBrD,EAJiB,gBAWJA,EAAIC,OAXA,OAWjBC,EAXiB,OAavBL,EAAS,CACLJ,KAAMJ,EACNc,QAASD,IAfU,kDAkBvBL,EAAS,CACLJ,KAAMF,EACNY,QAAS,KAAIC,SAASC,aApBH,0DAAJ,wDI+CZX,EAtEM,SAAC,GAAiB,IAAfwE,EAAc,EAAdA,QAAc,EACAZ,mBAAS,IADT,mBAC3BV,EAD2B,KAChBuB,EADgB,OAEFb,mBAAS,IAFP,mBAE3BT,EAF2B,KAEjBuB,EAFiB,KAqBlC,OACI,sBAAK1D,GAAG,iBAAiBD,UAAU,QAAnC,UACI,sBAAKA,UAAU,gBAAf,UACI,gDACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,cAAf,UACI,uBACIhB,KAAK,OACLiE,KAAK,YACL1C,MAAO4B,EACP/B,SAAU,SAAAC,GAAC,OAAIqD,EAAarD,EAAE6C,OAAO3C,UAEzC,uBAAOC,QAAQ,YAAYR,UAAU,SAArC,6BAMR,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,cAAf,UACI,uBACIhB,KAAK,OACLiE,KAAK,WACL1C,MAAO6B,EACPhC,SAAU,SAAAC,GAAC,OAAIsD,EAAYtD,EAAE6C,OAAO3C,UAExC,uBAAOC,QAAQ,WAAWR,UAAU,SAApC,+BAMZ,qBAAKA,UAAU,eAAf,SACI,mBACIU,KAAK,KACLO,QApDC,WACK,KAAdkB,GAAiC,KAAbC,EACpBd,IAAEC,MAAM,CAAEC,KAAM,0CAEhBiC,EAAQ,CACJtB,YACAC,aAGJd,IAAEC,MAAM,CAAEC,KAAK,GAAD,OAAKW,EAAL,YAAkBC,EAAlB,0BAGdsB,EAAa,IACbC,EAAY,MAwCJ3D,UAAU,gDAHd,2BC7BDf,cACX,KACA,CAAE2E,WLqBoB,SAAA3D,GAAE,8CAAI,WAAMb,GAAN,SAAAC,EAAA,sEAExBN,IAFwB,SAIlBO,MAAM,yEAAD,OAA0EW,GAAM,CACvFY,OAAQ,WALY,OAQxBzB,EAAS,CACLJ,KAAMH,EACNa,QAASO,IAVW,gDAaxBb,EAAS,CACLJ,KAAMF,EACNY,QAAS,KAAIC,SAASC,aAfF,yDAAJ,wDKvBbX,EAxBE,SAAC,GAA0B,IAAxBkC,EAAuB,EAAvBA,KAAMyC,EAAiB,EAAjBA,WAMtB,OACI,oBAAI5D,UAAU,kBAAd,SACI,gCACKmB,EAAKgB,UADV,IACsBhB,EAAKiB,SACvB,mBAAG1B,KAAK,KAAKV,UAAU,oBAAoBiB,QARtC,WACb2C,EAAWzC,EAAKlB,IAChBqB,IAAEC,MAAM,CAAEC,KAAM,wBAMR,SACI,mBAAGxB,UAAU,2BAAb,8BCiBLf,eAJS,SAAAwC,GAAK,MAAK,CAC9BN,KAAMM,EAAMN,QAKZ,CAAEa,YAFS/C,EA7BO,SAAC,GAA4C,IAA1C+C,EAAyC,EAAzCA,SAAyC,IAA/Bb,KAAQc,EAAuB,EAAvBA,MAAOL,EAAgB,EAAhBA,QAM9C,OALAC,qBAAU,WACNG,MAED,IAGC,qBAAK/B,GAAG,kBAAkBD,UAAU,QAApC,SACI,sBAAKA,UAAU,gBAAf,UACI,iDACA,oBAAIA,UAAU,aAAd,UACM4B,GACY,OAAVK,GACAA,EAAMF,KAAI,SAAAZ,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKlB,iB,sCCPpE4D,EAAe,CACjBlC,KAAM,KACNrB,QAAS,KACTsB,SAAS,EACTkC,MAAO,MCRLD,EAAe,CACjB5B,MAAO,KACPL,SAAS,EACTkC,MAAO,MCPIC,4BAAgB,CAC3BhD,IFcW,WAAmC,IAAlCU,EAAiC,uDAAzBoC,EAAcG,EAAW,uCAC7C,OAAQA,EAAOhF,MACX,KAAKd,EACD,OAAO,2BACAuD,GADP,IAEIE,KAAMqC,EAAOtE,QACbkC,SAAS,IAEjB,KAAKzD,EACD,OAAO,2BACAsD,GADP,IAEIE,KAAK,GAAD,mBAAMF,EAAME,MAAZ,CAAkBqC,EAAOtE,UAC7BkC,SAAS,IAEjB,KAAKxD,EACD,OAAO,2BACAqD,GADP,IAEIE,KAAMF,EAAME,KAAKsC,QAAO,SAAAlD,GAAG,OAAIA,EAAId,KAAO+D,EAAOtE,WACjDkC,SAAS,IAEjB,KAAKrD,EACD,OAAO,2BACAkD,GADP,IAEIE,KAAMF,EAAME,KAAKI,KAAI,SAAAhB,GAAG,OACpBA,EAAId,KAAO+D,EAAOtE,QAAQO,GAAK+D,EAAOtE,QAAUqB,OAG5D,KAAKrC,EACD,OAAO,2BACA+C,GADP,IAEIE,KAAMqC,EAAOtE,UAErB,KAAKrB,EACD,OAAO,2BACAoD,GADP,IAEInB,QAAS0D,EAAOtE,UAExB,KAAKpB,EACD,OAAO,2BACAmD,GADP,IAEInB,QAAS,OAEjB,KAAK9B,EACD,OAAO,2BACAiD,GADP,IAEIG,SAAS,IAEjB,KAAKnD,EAED,OADAyF,QAAQJ,MAAME,EAAOtE,SACd,2BACA+B,GADP,IAEIqC,MAAOE,EAAOtE,UAEtB,QACI,OAAO+B,IEnEfN,KDSW,WAAmC,IAAlCM,EAAiC,uDAAzBoC,EAAcG,EAAW,uCAC7C,OAAQA,EAAOhF,MACX,KAAKL,EACD,OAAO,2BACA8C,GADP,IAEIQ,MAAO+B,EAAOtE,QACdkC,SAAS,IAEjB,KAAKhD,EACD,OAAO,2BACA6C,GADP,IAEIQ,MAAM,GAAD,mBAAMR,EAAMQ,OAAZ,CAAmB+B,EAAOtE,UAC/BkC,SAAS,IAEjB,KAAK/C,EACD,OAAO,2BACA4C,GADP,IAEIQ,MAAOR,EAAMQ,MAAMgC,QAAO,SAAA9C,GAAI,OAAIA,EAAKlB,KAAO+D,EAAOtE,WACrDkC,SAAS,IAEjB,KAAKpD,EACD,OAAO,2BACAiD,GADP,IAEIG,SAAS,IAEjB,KAAK9C,EAED,OADAoF,QAAQJ,MAAME,EAAOtE,SACd,2BACA+B,GADP,IAEIqC,MAAOE,EAAOtE,QACdkC,SAAS,IAEjB,QACI,OAAOH,MEzCb0C,GAAa,CAACC,KAQLC,GANDC,sBACVC,EALiB,GAOjBC,8BAAoBC,kBAAe,WAAf,EAAmBN,MC0B5BO,I,YAtBH,WAKV,OAJA7C,qBAAU,WAERP,IAAEqD,cAGF,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,eAAC,WAAD,WACE,cAAC,EAAD,IACA,sBAAKrE,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,cC3BV4E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bf58efff.chunk.js","sourcesContent":["export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';","import {\r\n    GET_LOGS,\r\n    SET_LOADING,\r\n    LOGS_ERROR,\r\n    ADD_LOG,\r\n    DELETE_LOG,\r\n    UPDATE_LOG,\r\n    SEARCH_LOGS,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT\r\n} from './types';\r\n\r\n// export const getLogs = () => {\r\n//   return async dispatch => {\r\n//     setLoading();\r\n\r\n//     const res = await fetch('/logs');\r\n//     const data = await res.json();\r\n\r\n//     dispatch({\r\n//       type: GET_LOGS,\r\n//       payload: data\r\n//     });\r\n//   };\r\n// };\r\n\r\n\r\n// Get logs from server\r\nexport const getLogs = () => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch('https://my-json-server.typicode.com/ayo83/it-logger-fake-server/logs');\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: GET_LOGS,\r\n            payload: data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n    }\r\n};\r\n\r\n// Add new log\r\nexport const addLog = log => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch('https://my-json-server.typicode.com/ayo83/it-logger-fake-server/logs', {\r\n            method: 'POST',\r\n            body: JSON.stringify(log),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: ADD_LOG,\r\n            payload: data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n    }\r\n};\r\n\r\n// Delete log from server\r\nexport const deleteLog = id => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        await fetch(`https://my-json-server.typicode.com/ayo83/it-logger-fake-server/logs/${id}`, {\r\n            method: 'DELETE'\r\n        });\r\n\r\n        dispatch({\r\n            type: DELETE_LOG,\r\n            payload: id\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n    }\r\n};\r\n\r\n// Update log on server\r\nexport const updateLog = log => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch(`https://my-json-server.typicode.com/ayo83/it-logger-fake-server/logs/${log.id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(log),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: UPDATE_LOG,\r\n            payload: data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n    }\r\n};\r\n\r\n// Search server logs\r\nexport const searchLogs = text => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch(`https://my-json-server.typicode.com/ayo83/it-logger-fake-server/logs?q=${text}`);\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: SEARCH_LOGS,\r\n            payload: data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n    }\r\n};\r\n\r\n// Set current log\r\nexport const setCurrent = log => {\r\n    return {\r\n        type: SET_CURRENT,\r\n        payload: log\r\n    };\r\n};\r\n\r\n// Clear current log\r\nexport const clearCurrent = () => {\r\n    return {\r\n        type: CLEAR_CURRENT\r\n    };\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n    return {\r\n        type: SET_LOADING\r\n    };\r\n};\r\n\r\n","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { searchLogs } from '../../actions/logActions';\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n    const text = useRef('');\r\n\r\n    const onChange = e => {\r\n        searchLogs(text.current.value);\r\n    };\r\n\r\n    return (\r\n        <nav style={{ marginBottom: '30px' }} className='black'>\r\n            <div className='nav-wrapper'>\r\n                <form>\r\n                    <div className='input-field'>\r\n                        <input\r\n                            id='search'\r\n                            type='search'\r\n                            placeholder='Search Logs..'\r\n                            ref={text}\r\n                            onChange={onChange}\r\n                        />\r\n                        <label className='label-icon' htmlFor='search'>\r\n                            <i className='material-icons'>search</i>\r\n                        </label>\r\n                        <i className='material-icons'>close</i>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nSearchBar.propTypes = {\r\n    searchLogs: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    { searchLogs }\r\n)(SearchBar);\r\n","import React from 'react';\r\n\r\nconst AddBtn = () => {\r\n    return (\r\n        <div className=\"fixed-action-btn\">\r\n            <a href=\"#add-log-modal\" className=\"btn-floating btn-large black darken-2 modal-trigger\">\r\n                <i className=\"large material-icons\">add</i>\r\n            </a>\r\n            <ul>\r\n                <li>\r\n                    <a href=\"#tech-list-modal\" className=\"btn-floating green modal-trigger\">\r\n                        <i className=\"material-icons\">person</i>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#add-tech-modal\" className=\"btn-floating red modal-trigger\">\r\n                        <i className=\"material-icons\">person_add</i>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddBtn;\r\n","import React from 'react';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"progress blue lighten-4\">\r\n            <div className=\"indeterminate blue\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { deleteLog, setCurrent } from '../../actions/logActions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n    const onDelete = () => {\r\n        deleteLog(log.id);\r\n        M.toast({ html: 'Log Deleted' });\r\n    };\r\n\r\n    return (\r\n        <li className=\"collection-item\">\r\n            <div>\r\n                <a href=\"#edit-log-modal\" className={`modal-trigger ${log.attention ? 'red-text' : 'blue-text'}`} \r\n                onClick={() => setCurrent(log)}>{log.message}</a><br />\r\n                <span className=\"grey-text\">\r\n                    <span className=\"black-text\">ID #{log.id}</span>{' '}\r\n                    last updated by{' '} <span className=\"black-text\">{log.tech}</span> on{' '}<Moment format='MMMM Do YYYY, h:mm:ss a' >{log.date}</Moment>\r\n                </span>\r\n                <a href=\"#!\" onClick={onDelete} className=\"secondary-content\">\r\n                    <i className=\"material-icons grey-text\">delete</i>\r\n                </a>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nLogItem.propTypes = {\r\n    log: PropTypes.object.isRequired,\r\n    deleteLog: PropTypes.func.isRequired,\r\n    setCurrent: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nexport default connect(\r\n    null,\r\n    { deleteLog, setCurrent }\r\n)(LogItem);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Preloader from '../layout/Preloader';\r\nimport LogItem from \"./LogItem\";\r\nimport PropTypes from 'prop-types';\r\nimport { getLogs } from \"../../actions/logActions\";\r\n\r\nconst Logs = ({log:{logs, loading}, getLogs }) => {\r\n    \r\n\r\n    useEffect(() => {\r\n        getLogs();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    \r\n\r\n    if(loading || logs === null) return <Preloader />\r\n    return (\r\n        <ul className=\"collection with-header\">\r\n            <li className=\"collection-header\">\r\n                <h4 className=\"center\">System Logs</h4>\r\n            </li>\r\n            {!loading && logs.length === 0 ? (\r\n                <p className=\"center\">No logs to show.......</p>\r\n            ) : (\r\n                logs.map(log => <LogItem log={log} key={log.id} /> )\r\n            )}\r\n        </ul>\r\n    );\r\n};\r\n\r\nLogs.propTypes = {\r\n    log: PropTypes.object.isRequired,\r\n    getLogs: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    log: state.log\r\n})\r\n\r\nexport default connect(mapStateToProps, { getLogs })(Logs);\r\n","import {\r\n    GET_TECHS,\r\n    ADD_TECH,\r\n    DELETE_TECH,\r\n    SET_LOADING,\r\n    TECHS_ERROR\r\n} from './types';\r\n\r\n// Get techs from server\r\nexport const getTechs = () => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch('https://my-json-server.typicode.com/ayo83/it-logger-fake-server/techs');\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: GET_TECHS,\r\n            payload: data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: TECHS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n    }\r\n};\r\n\r\n// Add technician to server\r\nexport const addTech = tech => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch('https://my-json-server.typicode.com/ayo83/it-logger-fake-server/techs', {\r\n            method: 'POST',\r\n            body: JSON.stringify(tech),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: ADD_TECH,\r\n            payload: data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: TECHS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteTech = id => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        await fetch(`https://my-json-server.typicode.com/ayo83/it-logger-fake-server/techs/${id}`, {\r\n            method: 'DELETE'\r\n        });\r\n\r\n        dispatch({\r\n            type: DELETE_TECH,\r\n            payload: id\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: TECHS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n    }\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n    return {\r\n        type: SET_LOADING\r\n    };\r\n};","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getTechs } from '../../actions/techActions';\r\n\r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n    useEffect(() => {\r\n        getTechs();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        !loading &&\r\n        techs !== null &&\r\n        techs.map(t => (\r\n            <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\r\n                {t.firstName} {t.lastName}\r\n            </option>\r\n        ))\r\n    );\r\n};\r\n\r\nTechSelectOptions.propTypes = {\r\n    tech: PropTypes.object.isRequired,\r\n    getTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    tech: state.tech\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getTechs }\r\n)(TechSelectOptions);","import React, { useState } from 'react';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport { connect } from \"react-redux\";\r\nimport { addLog } from '../../actions/logActions';\r\nimport PropTypes from 'prop-types';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddLogModal = ({addLog}) => {\r\n    const [message, setMessage] = useState('');\r\n    const [attention, setAttention] = useState(false);\r\n    const [tech, setTech] = useState('');\r\n\r\n    const onsubmit = () =>{\r\n        if(message === '' || tech === ''){\r\n            M.toast({ html: 'Please enter a message and tech'});\r\n        } else{\r\n            const newLog = {\r\n                message,\r\n                attention,\r\n                tech,\r\n                date: new Date()\r\n            }\r\n\r\n            addLog(newLog);\r\n            M.toast({ html: `Log added by ${tech}`}); \r\n\r\n            setMessage('');\r\n            setAttention(false);\r\n            setTech('');\r\n        };\r\n\r\n    };\r\n    \r\n    return (\r\n        <div id='add-log-modal' className='modal' style={modalStyle}>\r\n            <div className=\"modal-content\">\r\n                <h4>Enter System Log</h4>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" name='message' value={message} onChange={e => setMessage(e.target.value)} />\r\n                        <label htmlFor=\"message\" className=\"active\">Log Message</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <select name=\"tech\" value={tech} className=\"browser-default\" onChange={e => setTech(e.target.value)}>\r\n                            <option value=\"\" disabled>Select Technician</option>\r\n                            <TechSelectOptions />\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"input-field\">\r\n                    <p>\r\n                        <label>\r\n                            <input type=\"checkbox\" className=\"filled-in\" checked={attention} value={attention} onChange={e => setAttention(!attention)} />\r\n                            <span>Needs Attention</span>\r\n                        </label>\r\n                    </p>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <a href=\"#!\" onClick={onsubmit} className=\"modal-close waves-effect black waves-light btn\">Enter</a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nAddLogModal.propTypes = {\r\n    addLog: PropTypes.func.isRequired\r\n}\r\n\r\nconst modalStyle = {\r\n    width: '75%',\r\n    height: '75%'\r\n}\r\n\r\nexport default connect(null, {addLog})(AddLogModal);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { updateLog } from '../../actions/logActions';\r\n\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [attention, setAttention] = useState(false);\r\n    const [tech, setTech] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (current) {\r\n            setMessage(current.message);\r\n            setAttention(current.attention);\r\n            setTech(current.tech);\r\n        }\r\n    }, [current]);\r\n\r\n    const onsubmit = () => {\r\n        if (message === '' || tech === '') {\r\n            M.toast({ html: 'Please enter a message and tech' });\r\n        } else {\r\n            const updLog = {\r\n                id: current.id,\r\n                message,\r\n                attention,\r\n                tech,\r\n                date: new Date()\r\n            };\r\n\r\n            updateLog(updLog);\r\n            M.toast({ html: `Log updated by ${tech}` });\r\n\r\n            setMessage('');\r\n            setAttention(false);\r\n            setTech('');\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div id='edit-log-modal' className='modal' style={modalStyle}>\r\n            <div className=\"modal-content\">\r\n                <h4>Enter System Log</h4>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" name='message' value={message} onChange={e => setMessage(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <select name=\"tech\" value={tech} className=\"browser-default\" onChange={e => setTech(e.target.value)}>\r\n                            <option value=\"\" disabled>Select Technician</option>\r\n                            <option value=\"John Smit\">John Smith</option>\r\n                            <option value=\"Sam Smit\">Sam Smith</option>\r\n                            <option value=\"Jerry Emmanuel\">Jerry Emmanuel</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <p>\r\n                            <label>\r\n                                <input type=\"checkbox\" className=\"filled-in\" checked={attention} value={attention} onChange={e => setAttention(!attention)} />\r\n                                <span>Needs Attention</span>\r\n                            </label>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <a href=\"#!\" onClick={onsubmit} className=\"modal-close waves-effect black waves-light btn\">Enter</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst modalStyle = {\r\n    width: '75%',\r\n    height: '75%'\r\n}\r\n\r\nEditLogModal.propTypes = {\r\n    current: PropTypes.object,\r\n    updateLog: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    current: state.log.current\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { updateLog }\r\n)(EditLogModal);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addTech } from '../../actions/techActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n\r\n    const onSubmit = () => {\r\n        if (firstName === '' || lastName === '') {\r\n            M.toast({ html: 'Please enter the first and last name' });\r\n        } else {\r\n            addTech({\r\n                firstName,\r\n                lastName\r\n            });\r\n\r\n            M.toast({ html: `${firstName} ${lastName} was added as a tech` });\r\n\r\n            // Clear Fields\r\n            setFirstName('');\r\n            setLastName('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div id='add-tech-modal' className='modal'>\r\n            <div className='modal-content'>\r\n                <h4>New Technician</h4>\r\n                <div className='row'>\r\n                    <div className='input-field'>\r\n                        <input\r\n                            type='text'\r\n                            name='firstName'\r\n                            value={firstName}\r\n                            onChange={e => setFirstName(e.target.value)}\r\n                        />\r\n                        <label htmlFor='firstName' className='active'>\r\n                            First Name\r\n            </label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='input-field'>\r\n                        <input\r\n                            type='text'\r\n                            name='lastName'\r\n                            value={lastName}\r\n                            onChange={e => setLastName(e.target.value)}\r\n                        />\r\n                        <label htmlFor='lastName' className='active'>\r\n                            Last Name\r\n            </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='modal-footer'>\r\n                <a\r\n                    href='#!'\r\n                    onClick={onSubmit}\r\n                    className='modal-close waves-effect blue waves-light btn'\r\n                >\r\n                    Enter\r\n        </a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nAddTechModal.propTypes = {\r\n    addTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    { addTech }\r\n)(AddTechModal);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteTech } from '../../actions/techActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\n\r\nconst TechItem = ({ tech, deleteTech }) => {\r\n\r\n    const onDelete = () => {\r\n        deleteTech(tech.id);\r\n        M.toast({ html: 'Technician deleted' });\r\n    };\r\n    return (\r\n        <li className=\"collection-item\">\r\n            <div>\r\n                {tech.firstName} {tech.lastName}\r\n                <a href=\"#!\" className=\"secondary-content\" onClick={onDelete}>\r\n                    <i className=\"material-icons grey-text\">delete</i>\r\n                </a>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\n\r\nTechItem.propTypes = {\r\n    tech: PropTypes.object.isRequired,\r\n    deleteTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    { deleteTech }\r\n)(TechItem);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport TechItem from './TechItem';\r\nimport { getTechs } from '../../actions/techActions';\r\n\r\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\r\n    useEffect(() => {\r\n        getTechs();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <div id='tech-list-modal' className='modal'>\r\n            <div className='modal-content'>\r\n                <h4>Technician List</h4>\r\n                <ul className='collection'>\r\n                    {!loading &&\r\n                        techs !== null &&\r\n                        techs.map(tech => <TechItem tech={tech} key={tech.id} />)}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTechListModal.propTypes = {\r\n    tech: PropTypes.object.isRequired,\r\n    getTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    tech: state.tech\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getTechs }\r\n)(TechListModal);","import {\r\n    GET_LOGS,\r\n    SET_LOADING,\r\n    LOGS_ERROR,\r\n    ADD_LOG,\r\n    DELETE_LOG,\r\n    UPDATE_LOG,\r\n    SEARCH_LOGS,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    logs: null,\r\n    current: null,\r\n    loading: false,\r\n    error: null\r\n};\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_LOGS:\r\n            return {\r\n                ...state,\r\n                logs: action.payload,\r\n                loading: false\r\n            };\r\n        case ADD_LOG:\r\n            return {\r\n                ...state,\r\n                logs: [...state.logs, action.payload],\r\n                loading: false\r\n            };\r\n        case DELETE_LOG:\r\n            return {\r\n                ...state,\r\n                logs: state.logs.filter(log => log.id !== action.payload),\r\n                loading: false\r\n            };\r\n        case UPDATE_LOG:\r\n            return {\r\n                ...state,\r\n                logs: state.logs.map(log =>\r\n                    log.id === action.payload.id ? action.payload : log\r\n                )\r\n            };\r\n        case SEARCH_LOGS:\r\n            return {\r\n                ...state,\r\n                logs: action.payload\r\n            };\r\n        case SET_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: action.payload\r\n            };\r\n        case CLEAR_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: null\r\n            };\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case LOGS_ERROR:\r\n            console.error(action.payload);\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {\r\n    GET_TECHS,\r\n    ADD_TECH,\r\n    DELETE_TECH,\r\n    SET_LOADING,\r\n    TECHS_ERROR\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    techs: null,\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_TECHS:\r\n            return {\r\n                ...state,\r\n                techs: action.payload,\r\n                loading: false\r\n            };\r\n        case ADD_TECH:\r\n            return {\r\n                ...state,\r\n                techs: [...state.techs, action.payload],\r\n                loading: false\r\n            };\r\n        case DELETE_TECH:\r\n            return {\r\n                ...state,\r\n                techs: state.techs.filter(tech => tech.id !== action.payload),\r\n                loading: false\r\n            };\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case TECHS_ERROR:\r\n            console.error(action.payload);\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport logReducer from './logReducer';\r\nimport techReducer from './techReducer';\r\n\r\nexport default combineReducers({\r\n    log: logReducer,\r\n    tech: techReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React, { useEffect, Fragment } from 'react';\nimport SearchBar from './components/layout/SearchBar';\nimport AddBtn from './components/layout/AddBtn';\nimport Logs from './components/logs/Logs';\nimport AddLogModal from './components/logs/AddLogModal';\nimport EditLogModal from './components/logs/EditLogModal';\nimport AddTechModal from './components/techs/AddTechModal';\nimport TechListModal from './components/techs/TechListModal';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport './App.css';\n\nconst App = () => {\n  useEffect(() => {\n    // Init Materialize JS\n    M.AutoInit();\n  })\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <div className='container'>\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}